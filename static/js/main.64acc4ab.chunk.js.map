{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/OneContact/OneContact.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/OneContact/OneContact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","ContactForm","state","name","number","handleChange","e","target","value","setState","resetForm","handleSubmit","preventDefault","props","addNewContact","this","form","onSubmit","label","input","type","pattern","title","onChange","required","btn","Component","Contact","onDelete","item","text","onClick","ContactList","contacts","deleteContact","list","map","id","Filter","filterLabel","filterInput","App","filter","contact","uuidv4","find","alert","prevState","changeFilter","currentTarget","localContacts","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64acc4ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__RJbXp\",\"label\":\"ContactForm_label__iANHG\",\"btn\":\"ContactForm_btn__2ljZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"OneContact_item__2-SL0\",\"text\":\"OneContact_text__qh9M9\",\"btn\":\"OneContact_btn__1qcZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__36vzA\",\"filterLabel\":\"Filter_filterLabel__2YQdn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__ECQzP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1sC6J\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addNewContact(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import styles from './OneContact.module.css';\r\n\r\nconst Contact = ({ name, number, onDelete }) => (\r\n  <div className={styles.item}>\r\n    <p className={styles.text}>\r\n      {name}:{number}\r\n    </p>\r\n    <button className={styles.btn} type=\"button\" onClick={onDelete}>\r\n      Delete\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Contact;\r\n","import styles from './ContactList.module.css';\r\n\r\nimport Contact from '../OneContact/OneContact';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => (\r\n  <ul className={styles.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <Contact\r\n          name={name}\r\n          number={number}\r\n          onDelete={() => deleteContact(id)}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n","import styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.filterLabel}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.filterInput}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\r\nimport './App.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Container from './components/Container/Container';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localContacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(localContacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addNewContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.state.contacts.find(({ name }) => name === contact.name)\r\n      ? alert(`${contact.name} already exists`)\r\n      : this.setState(prevState => {\r\n          return {\r\n            contacts: [...prevState.contacts, contact],\r\n          };\r\n        });\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\r\n    );\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addNewContact={this.addNewContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}