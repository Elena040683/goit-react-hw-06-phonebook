{"version":3,"sources":["components/OneContact/OneContact.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","redux/contacts/actions.js","components/OneContact/OneContact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","ContactForm","state","name","number","handleChange","e","target","value","setState","resetForm","handleSubmit","preventDefault","props","addNewContact","onAdd","this","form","onSubmit","label","input","type","pattern","title","onChange","required","btn","Component","connect","dispatch","contact","payload","id","uuidv4","addContact","Contact","onDelete","item","text","onClick","contacts","list","map","filterLabel","filterInput","App","filter","find","alert","prevState","changeFilter","currentTarget","deleteContact","localContacts","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","toLowerCase","includes","contactReducer","combineReducers","items","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.388f99d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"OneContact_item__2-SL0\",\"text\":\"OneContact_text__qh9M9\",\"btn\":\"OneContact_btn__1qcZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__36vzA\",\"filterLabel\":\"Filter_filterLabel__2YQdn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__ECQzP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1sC6J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__RJbXp\",\"label\":\"ContactForm_label__iANHG\",\"btn\":\"ContactForm_btn__2ljZi\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/contacts/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addNewContact(this.state);\r\n    this.props.onAdd(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   contactList: state.contacts,\r\n// });\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAdd: contact => dispatch(addContact(contact)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = ({ name, number }) => ({\r\n  type: 'contact/add',\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nexport const deleteContact = contactId => ({\r\n  type: 'contact/delete',\r\n  payload: contactId,\r\n});\r\n\r\nexport const changeFilter = value => ({\r\n  type: 'contact/change_filter',\r\n  payload: value,\r\n});\r\n","import styles from './OneContact.module.css';\r\n\r\nconst Contact = ({ name, number, onDelete }) => (\r\n  <div className={styles.item}>\r\n    <p className={styles.text}>\r\n      {name}:{number}\r\n    </p>\r\n    <button className={styles.btn} type=\"button\" onClick={onDelete}>\r\n      Delete\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Contact;\r\n","import styles from './ContactList.module.css';\r\n\r\nimport Contact from '../OneContact/OneContact';\r\nimport { connect } from 'react-redux';\r\nimport { addContact, deleteContact } from '../../redux/contacts/actions';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul className={styles.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <Contact name={name} number={number} onDelete={() => onDelete(id)} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\n// const mapStateToProps = state => ({\r\n//   const { items, filter } = state.contacts;\r\n\r\n// });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactList);\r\n","import { changeFilter } from '../../redux/contacts/actions';\r\nimport styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.filterLabel}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.filterInput}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\n// const mapStateToProps = state => ({\r\n//   value: state.contacts.filter,\r\n// });\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChange: e => dispatch(changeFilter(e.target.value)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import { Component } from 'react';\r\nimport './App.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Container from './components/Container/Container';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localContacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(localContacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addNewContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.state.contacts.find(({ name }) => name === contact.name)\r\n      ? alert(`${contact.name} already exists`)\r\n      : this.setState(prevState => {\r\n          return {\r\n            contacts: [...prevState.contacts, contact],\r\n          };\r\n        });\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\r\n    );\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addNewContact={this.addNewContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'contact/add':\r\n      return [...state, action.payload];\r\n\r\n    case 'contact/delete':\r\n      return state.filter(({ id }) => id !== action.payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'contact/change_filter':\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst contactReducer = combineReducers({\r\n  items: [],\r\n  filter: '',\r\n});\r\n\r\nexport const rootReducer = combineReducers({\r\n  contact: contactReducer,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootReducer } from './contacts/reducers';\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}